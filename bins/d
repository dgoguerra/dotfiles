#!/usr/bin/env bash

# Wrapper of `docker` with some aliases to common commands.
#
# Requires fzf to be installed:
#
#   brew install fzf
#

set -euo pipefail

wrapArgs() {
    if [[ $# == 0 ]]; then
        return
    fi

    local firstArg="$1"

    if [[ "$1" =~ ( ) ]]; then
        firstArg="\"$firstArg\""
    fi

    echo "$firstArg" $(wrapArgs "${@:2}")
}

runDocker() {
    BOLDGREEN='\033[0;32m\033[1m'
    NOCOLOR='\033[0m'

    echo -e "${BOLDGREEN}docker $(wrapArgs "$@")${NOCOLOR}" >&2

    docker "$@"
}

selectContainer() {
    docker ps "$@" --format "table {{.ID}}\t{{.Image}}\t{{.Status}}" \
        | tail -n +2 \
        | fzf \
        | cut -d " " -f1
}

CMD="$1"
ARGS="${@:2}"

case "$CMD" in
# Helper to select a running container for external commands
select)
    echo $(selectContainer) || exit 1
    ;;

# Helper to generate a "docker run" command to replicate an existing container
gen)
    tplUri="https://gist.githubusercontent.com/efrecon/8ce9c75d518b6eb863f667442d7bc679/raw/run.tpl"
    contId=$(selectContainer -a) || exit 1
    docker inspect --format "$(curl -s $tplUri)" "$contId"
    ;;

# Wrapper of "docker logs" with default options
logs)
    contId=$(selectContainer) || exit 1
    runDocker logs $contId -f --tail 20
    ;;

# Wrapper of "docker kill"
kill)
    # Kill all containers
    if [[ "$ARGS" == "all" ]]; then
        runDocker kill $(runDocker ps -q)
    else
        contId=$(selectContainer) || exit 1
        runDocker kill $contId
    fi
    ;;

# Wrapper of "docker run" with default options
run)
    # Build and run Dockerfile in a single step
    if [[ "$ARGS" == "." ]]; then
        # Use tee to capture the image ID, while showing the build output
        ARGS=$(docker build . \
            | tee /dev/fd/2 \
            | grep "Successfully built " \
            | cut -d " " -f 3) || exit 1
    fi

    runDocker run --rm -it "$ARGS"
    ;;

# Open shell or run a command in a container
sh|bash)
    contId=$(selectContainer) || exit 1

    # No args, open shell. Use bash if available, and sh instead
    if [[ "$ARGS" == "" ]]; then
        CMD=/bin/sh
        ARGS="[ -e /bin/bash ] && /bin/bash || /bin/sh"
    fi

    runDocker exec -it $contId $CMD -c "$ARGS"
    ;;

*)
    # Pass any arguments to docker
    runDocker "$@"
    ;;
esac
