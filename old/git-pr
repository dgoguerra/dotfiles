#!/usr/bin/env bash

# Open current branch in new PR window in Github.
#
# Requires `open-cli` to be installed:
#
#   npm install -g open-cli
#

is_branch_name() {
    git show-ref --verify "refs/heads/$1" >/dev/null 2>&1
}

# Select default destination branch; the first existing one
# from the array will be used.
#
# This could be improved: detect which branch is closer to
# the PR's HEAD and select it as the destination branch.
defaultBaseBranches="development develop release-next master"
for base in $defaultBaseBranches; do
    if is_branch_name "$base"; then
        prDestBranch="$base"
        break
    fi
done

repo="$(git repo)"
branch="$(git my-branch)"
remote="$(git my-remote)"
remoteUrl="$(git remote get-url $remote)"

if [[ "$remoteUrl" =~ "github.com" ]]; then
    open-cli "https://github.com/$repo/compare/$prDestBranch...$branch"
elif [[ "$remoteUrl" =~ "gitlab" ]]; then
    serverUrl=${remoteUrl#*@}
    serverUrl=${serverUrl%:*}
    serverUrl=${serverUrl%/*}
    open-cli "https://$serverUrl/$repo/-/merge_requests/new?merge_request%5Bsource_branch%5D=$branch"
else
    echo "Unexpected uri '$remoteUrl' for remote '$remote'"
    exit 1
fi
